[tool.poetry]
name = "app"
version = "0.1.0"
description = ""
authors = []
maintainers = []
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.9"
fastapi = "^0.111.0"
uvicorn = { version = "^0.30.1", extras = ["standard"] }
gunicorn = "^22.0.0"
pydantic = ">=2,<3"
pydantic-settings = ">=2,<3"
yarl = "^1"
ujson = "^5.10.0"
SQLAlchemy = { version = "^2.0.31", extras = ["asyncio"] }
asyncpg = "^0.29.0"
httptools = "^0.6.1"
pymongo = "^4.8.0"
loguru = "^0"
langchain = "^0.3.13"
langchain_community = "^0.3.13"
langchain_core = "^0.3.28"
langchain_google_genai = "^2.0.7"
python-docx = "^1.1.2"
python-pptx = "^1.0.2"
pypdf = "^5.1.0"
xmind = " * "  
reportlab = " * "
xmindparser =" * "
PyPDF2 = " * "

[tool.poetry.group.dev.dependencies]
pytest = "^8"
ruff = "^0.5.0"
mypy = "^1.10.1"
pre-commit = "^3.7.1"
black = "^24.4.2"
pytest-cov = "^5"
anyio = "^4"
pytest-env = "^1.1.3"
httpx = "^0.27.0"

[tool.isort]
profile = "black"
multi_line_output = 3
src_paths = ["app"]

[tool.mypy]
strict = true
ignore_missing_imports = true
allow_subclassing_any = true
allow_untyped_calls = true
pretty = true
show_error_codes = true
implicit_reexport = true
allow_untyped_decorators = true
warn_unused_ignores = false
warn_return_any = false
namespace_packages = true

[tool.pytest.ini_options]
filterwarnings = [
    "error",
    "ignore::DeprecationWarning",
    "ignore:.*unclosed.*:ResourceWarning",
]
env = [
    "APP_ENVIRONMENT=pytest",
    "APP_DB_BASE=app_test",
]

[tool.ruff]
lint.select = [
    "E", "F", "W", "C90", "I", "N", "D", "ANN", "S", "B", "COM", "C4",
    "ISC", "PIE", "T20", "PYI", "Q", "RSE", "RET", "SLF", "SIM", "PTH",
    "ERA", "PL", "RUF"
]
lint.ignore = [
    "D105", "D107", "B008", "D211", "D212", "D401", "D104", "D100",
    "D202", "ANN102", "ANN101", "ANN401", "PLR0913", "D106"
]
exclude = [
    "app/db/migrations",
    ".venv/"
]
lint.mccabe = { max-complexity = 10 }
line-length = 88

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.ruff.lint.pydocstyle]
convention = "pep257"
ignore-decorators = ["typing.overload"]

[tool.ruff.lint.pylint]
allow-magic-value-types = ["int", "str", "float", "bytes"]

[fastapi-template.options]
project_name = "app"
api_type = "rest"
enable_redis = "None"
enable_rmq = "None"
ci_type = "none"
enable_migrations = "None"
enable_taskiq = "None"
enable_kube = "None"
kube_name = "app"
enable_routers = "True"
enable_kafka = "None"
enable_loguru = "True"
traefik_labels = "True"
add_dummy = "None"
orm = "sqlalchemy"
self_hosted_swagger = "None"
prometheus_enabled = "None"
sentry_enabled = "None"
otlp_enabled = "None"
gunicorn = "True"
add_users = "None"
cookie_auth = "None"
jwt_auth = "None"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
